@using LYY.Report.Entity
@{
    var cuurent = DateTime.Now;
    var weekStartTime = new DateTime(cuurent.Year, cuurent.Month, cuurent.Day).AddDays(-7);
    var weekEndTime = new DateTime(cuurent.Year, cuurent.Month, cuurent.Day);
    var monthStarTime = new DateTime(cuurent.Year, 1, 1);
    var monthEndTime = new DateTime(cuurent.Year, 12, 31);
    var yearStartTime = new DateTime(2019, 1, 1);
    var yearEndTime = new DateTime(cuurent.Year, cuurent.Month, cuurent.Day);
}
@section rsHeader {
    <title>四川公司企业号管理后台 - 投诉量统计</title>
    @BuildJsRef("~/Content/third/echarts.common.min.js")
    <style type="text/css">
        /*tab 切换 start*/
        .toggle-tab
        {
            height: 100%;
            width: 100%;
        }

            .toggle-tab .tab-top
            {
                width: 100%;
                height: 30px;
                line-height: 30px;
                padding: 10px 0 5px;
            }

        .tab-buttons
        {
            width: 154px;
            height: 30px;
            border: 2px solid #5eb5e2;
            border-radius: 5px;
            box-sizing: border-box;
            background: #fff;
            float: right;
            margin-right: 10px;
            min-width: 126px;
        }

            .tab-buttons > span
            {
                float: left;
                text-align: center;
                height: 100%;
                line-height: 25px;
                color: #7b7b7b;
                white-space: nowrap;
                padding: 0 5px;
                cursor: pointer;
                border-left: 2px solid #5eb5e2;
                min-width: 50px;
                outline: none;
            }

                .tab-buttons > span:first-child
                {
                    border-left: 0;
                }

                .tab-buttons > span.selected
                {
                    background: #5eb5e2;
                    color: #fff;
                }

        .toggle-tab .tab-content
        {
            position: absolute;
            top: 45px;
            left: 0;
            right: 0;
            bottom: 0;
            z-index: 8;
        }

            .toggle-tab .tab-content > div
            {
                width: 100%;
                height: 100%;
            }
        /*tab 切换 start*/
        .button
        {
            border: 1px solid #2CBB87;
            height: 34px;
            line-height: 20px;
            min-width: 60px;
            color: #fff;
            background-color: #2CBB87;
            letter-spacing: 1px;
            text-indent: 2px;
            padding: 0 5px;
            font-size: 12px;
            font-family: "微软雅黑";
            cursor: pointer;
            outline: none;
        }

        .basicTab
        {
            margin-top: 60px;
        }
    </style>
}

@section rsNavigation {
    <li id="MenuLevel1">快车道查询统计</li>
    <li id="MenuLevel2" class="active">投诉量统计</li>
}

@section rsContent {
    <div id="container">
        <div class="widget">
            <div class="widget-header border-left">
                <span class="widget-caption">查询条件</span>
            </div>
            <div class="widget-body">
                <div class="row mt15">
                    <div class="form-group col-lg-3 col-sm-6 col-xs-12">
                        <div class="col-sm-4 control-label">
                            <label>统计模式：</label>
                        </div>
                        <div class="col-sm-8">
                            <div class="margin_left5" style="position: relative;display: inline-block;vertical-align: middle;">
                                <span class="tab-buttons">
                                    <span v-on:click="togglePeriod(@((int)DateTimeTypeEnum.Week))" v-bind:class="{selected:filter.DateTimeType===@((int)DateTimeTypeEnum.Week)}">日</span>
                                    <span v-on:click="togglePeriod(@((int)DateTimeTypeEnum.Month))" v-bind:class="{selected:filter.DateTimeType===@((int)DateTimeTypeEnum.Month)}">月</span>
                                    <span v-on:click="togglePeriod(@((int)DateTimeTypeEnum.Year))" v-bind:class="{selected:filter.DateTimeType===@((int)DateTimeTypeEnum.Year)}">年</span>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group col-lg-3 col-sm-6 col-xs-12">
                        <div class="col-sm-4 control-label">
                            <label>所属单位：</label>
                        </div>
                        <div class="col-sm-8">
                            <select class="form-control select-fix100" v-bind:change="searchData" v-model="filter.DepartmentId">
                                <option v-for="item in departmentList" :value="item.BusinessId">
                                    {{item.Name}}
                                </option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group col-lg-4 col-sm-6 col-xs-12">
                        <div class="col-sm-3 control-label">
                            <label>时间段：</label>
                        </div>
                        <div class="col-sm-4">
                            <div class="input-group non-padding">
                                <input type="text"
                                       readonly
                                       style="cursor:pointer;min-width:100px;"
                                       v-model="filter.StartTime"
                                       placeholder="开始时间"
                                       class="form-control"
                                       v-on:click="beginTimePickerClick('beginTime')" id="beginTime">
                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="input-group non-padding">
                                <input type="text"
                                       readonly
                                       style="cursor:pointer;min-width:100px;"
                                       v-model="filter.EndTime"
                                       placeholder="结束时间"
                                       class="form-control"
                                       v-on:click="endTimePickerClick('endTime')" id="endTime">
                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group col-lg-2 col-sm-6 col-xs-12">
                        <div class="col-sm-4 control-label">
                            <button class="btn btn-primary" v-on:click="searchData">查询</button>
                        </div>
                        <div class="col-sm-4 control-label">
                            <button class="btn btn-primary" v-on:click="resetFilter">重置</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="widget">
            <div class="widget-header border-left">
                <span class="widget-caption">查询结果</span>
                <div class="widget-buttons">
                    <span v-on:click="exportReport" class="btn btn-yellow btn-xs">导出</span>
                </div>
            </div>
            <div class="widget-body">
                <div class="row mt15">
                    <div class="basicTab">
                        <div id="lineChart" style="width: 100%; height: 360px;"></div>
                    </div>
                </div>

                <div class="row mt15">
                    <table class="table table-hover table-striped table-bordered" id="documentTable">
                        <thead class="bordered">
                        <tr>
                            <th>序号</th>
                            <th>公司名称</th>
                            <th>投诉量</th>
                            <th>去年同期投诉量</th>
                            <th>同比</th>
                            <th>上月同期投诉量</th>
                            <th>环比</th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr v-for="(item,index) in list">
                            <td v-text="index+1"></td>
                            <td v-text="item.DepartmentName"></td>
                            <td v-text="item.ComplaintCount"></td>
                            <td v-text="item.LastYearComplaintCount"></td>
                            <td v-text="item.LastYearComplaintCountProportion"></td>
                            <td v-text="item.LastMonthComplaintCount"></td>
                            <td v-text="item.LastMonthComplaintCountProportion"></td>
                        </tr>
                        <tr v-if="list.length === 0">
                            <td colspan="7" style="text-align: center;">暂无数据</td>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

}
@section rsFooter {
    <script type="text/javascript">
        var vue = new Vue({
            el: '#container',
            data: {
                departmentList: [],
                filter: {
                    DepartmentId: null,
                    DateTimeType: @((int) DateTimeTypeEnum.Week),
                    StartTime: '@(weekStartTime.ToString("yyyy-MM-dd"))',
                    EndTime: '@(weekEndTime.ToString("yyyy-MM-dd"))'
                },
                copyFilter: {},
                option: {
                    tooltip: {
                        trigger: 'axis',
                        label: {
                            show: true
                        }
                    },
                    xAxis: [
                        {
                            type: 'category',
                            boundaryGap: false, //类目起始和结束两端空白策略
                            data: []
                        }
                    ],
                    yAxis: [
                        {
                            type: 'value'
                        }
                    ],
                    series: [
                        {
                            name: '投诉量',
                            data: [],
                            type: 'line',
                            smooth: true
                        }
                    ]
                },
                chartList: [],
                list: [],
                myChart: null
            },
            watch: {
                chartList: function() {
                    this.refreshChart();
                }
            },
            mounted: function () {
                this.copyFilterData();
                this.myChart = echarts.init(document.getElementById("lineChart"));
                this.initDepartment();
                this.searchData();
            },
            methods: {
                exportReport: function() {
                    $.exportExcel('@Url.Action("SearchExportComplaintStatistics")',
                        [{ name: 'queryString', value: $.toJSON(this.copyFilter) }]);
                },
                copyFilterData: function () {
                    this.copyFilter = _.extend(this.copyFilter, this.filter);
                },
                togglePeriod: function(type) {
                    this.filter.DateTimeType = type;
                    switch (type) {
                    case @((int) DateTimeTypeEnum.Week):
                        this.filter.StartTime = '@(weekStartTime.ToString("yyyy-MM-dd"))';
                        this.filter.EndTime = '@(weekEndTime.ToString("yyyy-MM-dd"))';
                        break;
                    case @((int) DateTimeTypeEnum.Month):
                        this.filter.StartTime = '@(monthStarTime.ToString("yyyy-MM-dd"))';
                        this.filter.EndTime = '@(monthEndTime.ToString("yyyy-MM-dd"))';
                        break;
                    case @((int) DateTimeTypeEnum.Year):
                        this.filter.StartTime = '@(yearStartTime.ToString("yyyy-MM-dd"))';
                        this.filter.EndTime = '@(yearEndTime.ToString("yyyy-MM-dd"))';
                        break;
                    default:
                        this.filter.StartTime = '@(weekStartTime.ToString("yyyy-MM-dd"))';
                        this.filter.EndTime = '@(weekEndTime.ToString("yyyy-MM-dd"))';
                        break;
                    }
                },
                resetFilter: function() {
                    this.filter = {
                        DepartmentId: null,
                        DateTimeType: @((int) DateTimeTypeEnum.Week),
                        StartTime: '@(weekStartTime.ToString("yyyy-MM-dd"))',
                        EndTime: '@(weekEndTime.ToString("yyyy-MM-dd"))'
                    }
                },
                searchData: function() {
                    var self = this;
                    self.copyFilterData();
                    $.ajax({
                        type: 'POST',
                        contentType: 'application/json',
                        url: '@Url.Action("QueryComplaintStatistics")',
                        data: $.toJSON(self.filter),
                        success: function(data) {
                            if (data.Data && data.Success) {
                                self.list = data.Data.list;
                                self.chartList = data.Data.chartList;
                            }
                        }
                    });
                },
                refreshChart: function() { //设备用电分析
                    var self = this;
                    var xAxis = _.pluck(self.chartList, "Key");
                    var data = _.pluck(self.chartList, "Value");
                    self.option.xAxis[0].data = xAxis;
                    self.option.series[0].data = data;
                    self.myChart.setOption(self.option, true);
                },
                beginTimePickerClick: function(id) {
                    var self = this;
                    window.WdatePicker({
                        el: document.getElementById(id),
                        minDate: '',
                        isShowClear: false,
                        readOnly: true,
                        maxDate: '#F{$dp.$D(\'endTime\')}',
                        onpicked: function(dp) {
                            var dateStr = dp.cal.getDateStr();
                            self.filter.StartTime = dateStr;
                            self.$emit('input', dateStr);
                        },
                        oncleared: function(dp) {
                            self.filter.StartTime = null;
                            self.$emit('input', '');
                        }
                    });
                },
                endTimePickerClick: function(id) {
                    var self = this;
                    window.WdatePicker({
                        el: document.getElementById(id),
                        minDate: '#F{$dp.$D(\'beginTime\')}',
                        maxDate: '',
                        isShowClear: false,
                        readOnly: true,
                        onpicked: function(dp) {
                            var dateStr = dp.cal.getDateStr();
                            self.filter.EndTime = dateStr;
                            self.$emit('input', dateStr);
                        },
                        oncleared: function(dp) {
                            self.filter.EndTime = null;
                            self.$emit('input', '');
                        }
                    });
                },
                initDepartment: function() {
                    var self = this;
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("GetDepartmentList")',
                        success: function(data) {
                            if (data.Data && data.Success) {
                                self.departmentList = _.union([{ BusinessId: null, Name: '全选' }], data.Data);
                            }
                        }
                    });
                }
            }
        });
    </script>
}
