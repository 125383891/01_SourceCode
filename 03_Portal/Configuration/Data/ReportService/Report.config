<?xml version="1.0" encoding="utf-8"?>
<SQLConfig xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <SQLList>
    <!--数据写入-->
    <SQL SQLKey="Report.ComplaintStatisticsChart" ConnectionKey="MySql">
      <Text>
        <![CDATA[
      select DATE_FORMAT(create_time, @FormatDate) as `Key`, count(id) as `Value`
      from t_subject
      #STRWHERE#
      group by DATE_FORMAT(create_time, @FormatDate);
        ]]>
      </Text>
    </SQL>

    <SQL SQLKey="Report.ComplaintStatisticsList" ConnectionKey="MySql">
      <Text>
        <![CDATA[
        select td.id,
               td.name as DepartmentName,
               count(ts.id) as ComplaintCount,
               (select count(1)
                from t_subject
                where create_time >= date_add(@StartTime, interval -1 year)
                  and create_time < date_add(@EndTime, interval -1 year)
                  and is_delete = 0
                  and department_id = td.id) as LastYearComplaintCount,
               (select count(1)
                from t_subject
                where create_time >= date_add(@StartTime, interval -1 month)
                  and create_time < date_add(@EndTime, interval -1 month)
                  and is_delete = 0
                  and department_id = td.id) as LastMonthComplaintCount
        from t_department td
               join t_subject ts on td.id = ts.department_id
        #STRWHERE#
        group by td.id, td.name;
        ]]>
      </Text>
    </SQL>

    <SQL SQLKey="Report.ProductVendorStatisticsList" ConnectionKey="MySql">
      <Text>
        <![CDATA[
        /*TagVendorFragment{[
          select SQL_CALC_FOUND_ROWS ts.vendor           as `Name`,
                             count(1)                    as ComplaintCount,
                             T.FinishCount               as FinishCount
          from t_subject ts 
                join (select ts.vendor, count(distinct tr.id) as FinishCount
                   from t_subject ts
                          join t_reply tr on ts.id = tr.subject_id
                   #STRWHERE# AND tr.star is not null
                   group by ts.vendor) AS T ON T.vendor = ts.vendor
          #STRWHERE#
          group by ts.vendor
          ORDER BY @SortFields
          LIMIT @StartNum,@PageSize;
        ]}*/
        
        /*TagProductFragment{[
            select SQL_CALC_FOUND_ROWS tp.name                     as `Name`,
                                       count(1)                    as ComplaintCount,
                                       T.FinishCount               as FinishCount
            from t_subject ts
                   JOIN t_product tp on ts.product_id = tp.id
                   JOIN (select ts.product_id, count(distinct tr.id) as FinishCount
                   from t_subject ts
                          join t_reply tr on ts.id = tr.subject_id
                         #STRWHERE# AND tr.star is not null
                   group by ts.product_id) AS T ON T.product_id = ts.product_id
            #STRWHERE#
            group by tp.id, tp.name
            ORDER BY @SortFields
            LIMIT @StartNum,@PageSize;
        ]}*/
        select FOUND_ROWS();
        ]]>
      </Text>
    </SQL>
    
    
    <SQL SQLKey="Report.ActivityStatisticsChart" ConnectionKey="MySql">
      <Text>
        <![CDATA[
        select DATE_FORMAT(tud.create_time, @FormatDate) as `Key`, count(#filterDistinct#tud.user_id) as `Value`
        from t_user_daily tud
        /*TagFilterDepartment{[
              join t_user_department tud2 on tud.user_id = tud2.user_id
        ]}*/
        #STRWHERE#
        group by DATE_FORMAT(tud.create_time, @FormatDate);
        ]]>
      </Text>
    </SQL>
  
    <SQL SQLKey="Report.ActivityStatisticsList" ConnectionKey="MySql">
      <Text>
        <![CDATA[
        select td.id,
         td.name                                                     as DepartmentName,
         count(#filterDistinct#tud2.user_id)                                              as ActivityCount,
         (select count(#filterDistinct#tud4.user_id)
          from t_user_daily tud4
                 join t_user_department tud3 on tud4.user_id = tud3.user_id
          where tud3.department_id = tud.department_id
            and tud4.create_time >= date_add(@StartTime, interval -1 year)
            and tud4.create_time < date_add(@EndTime, interval -1 year))  as LastYearActivityCount,
         (select count(#filterDistinct#tud4.user_id)
          from t_user_daily tud4
                 join t_user_department tud3 on tud4.user_id = tud3.user_id
          where tud3.department_id = tud.department_id
            and tud4.create_time >= date_add(@StartTime, interval -1 month)
            and tud4.create_time < date_add(@EndTime, interval -1 month)) as LastMonthActivityCount
          from t_department td
                 join t_user_department tud on td.id = tud.department_id
                 join t_user_daily tud2 on tud.user_id = tud2.user_id
          #STRWHERE#
          group by td.id, td.name;
        ]]>
      </Text>
    </SQL>
  
 <SQL SQLKey="Report.SubjectStatisticsChart" ConnectionKey="MySql">
      <Text>
        <![CDATA[
        select tc.lable as 'Key', count(1) as 'Value'
        from t_subject ts
               join t_cat tc on ts.cat_id = tc.id
             #STRWHERE#
        group by tc.lable
        order by tc.id asc;
        ]]>
      </Text>
    </SQL>
  
  <SQL SQLKey="Report.ArticleInterviewStatisticsChart" ConnectionKey="MySql">
        <Text>
          <![CDATA[
         select DATE_FORMAT(T.create_time, @FormatDate) AS 'Key',
                 IFNULL(SUM(T.view), 0)                AS 'Value',
                 IFNULL(SUM(T.CommentCount), 0)        as 'Value2'
          from (
                 select id,
                        create_time,
                        view,
                        (SELECT count(1)
                         FROM t_article_reply tar
                         WHERE article_id = ta.id
                           AND tar.is_delete = 0) AS CommentCount
                 from t_article ta
                 #STRWHERE#
               ) as T
          group by DATE_FORMAT(T.create_time, @FormatDate);
          ]]>
        </Text>
   </SQL>

    <SQL SQLKey="Report.ExternalDepartmentStatisticsList" ConnectionKey="MySql">
      <Text>
        <![CDATA[
          SELECT SQL_CALC_FOUND_ROWS c.id,
                           d.`name`                                          AS SubjectDepartmentName,
                           e.`name`                                          AS CreateSubjectUserName,
                           c.title,
                           f.`name`                                          AS ExternalUserName,
                           h.`name`                                          AS ExternalDepartmentName,
                           a.create_time                                     AS AssignmentTime,
                           (SELECT star FROM t_reply WHERE subject_id = c.id
                                                       AND create_user = a.to_user
                                                       AND star IS NOT NULL) AS Stat
          FROM t_replyer_assign_record a
                 LEFT JOIN t_user_tag b ON a.to_user = b.user_id AND b.tag_id = @TagValue
                 LEFT JOIN t_subject c ON a.subject_id = c.id
                 LEFT JOIN t_department d ON c.department_id = d.id
                 LEFT JOIN t_user e ON c.create_user = e.id
                 LEFT JOIN t_user f ON a.to_user = f.id
                 LEFT JOIN t_user_department g ON f.id = g.user_id
                 LEFT JOIN t_department h ON g.department_id = h.id
          #STRWHERE# AND b.tag_id IS NULL
          ORDER BY @SortFields
          LIMIT @StartNum,@PageSize;

          SELECT FOUND_ROWS();
          ]]>
      </Text>
    </SQL>
    
  </SQLList>
</SQLConfig>