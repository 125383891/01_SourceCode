<?xml version="1.0" encoding="utf-8"?>
<SQLConfig xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <SQLList>
    <SQL SQLKey="Subject.SearchExportList" ConnectionKey="MySql">
      <Text>
        <![CDATA[
        DROP TEMPORARY TABLE
        IF EXISTS subject_first_reply;
        # 每个主题首回复的数据
        CREATE TEMPORARY TABLE subject_first_reply AS
          SELECT tr.id, tr.subject_id, tr.create_user, tu.name AS create_name, tr.content, tr.create_time, parent_id
          FROM t_reply tr
                 JOIN t_user tu ON tr.create_user = tu.id
                 JOIN (SELECT MIN(tr2.id) AS replyId
                       FROM t_reply tr2
                              JOIN (SELECT T.subject_id, to_user
                                    FROM t_replyer_assign_record AS trar
                                           JOIN (SELECT subject_id, min(create_time) AS create_time
                                                 FROM t_replyer_assign_record
                                                 GROUP BY subject_id) AS T
                                             ON trar.subject_id = T.subject_id AND trar.create_time = T.create_time) AS TT
                                ON tr2.subject_id = TT.subject_id AND tr2.create_user = TT.to_user
                       WHERE tr2.parent_id IS NULL
                       GROUP BY tr2.subject_id) AS T ON tr.id = T.replyId
          ORDER BY create_time ASC;

        # 每个主题首评星数据
        DROP TEMPORARY TABLE
        IF EXISTS subject_first_stat;
        CREATE TEMPORARY TABLE subject_first_stat AS
          SELECT tr.id,
                 tr.subject_id,
                 tr.create_user,
                 tu.name AS create_name,
                 tr.content,
                 tr.create_time,
                 tr.star,
                 tr.star_remark,
                 tr.star_remark2
          FROM t_reply tr
                 JOIN t_user tu ON tr.create_user = tu.id
                 JOIN (SELECT subject_id, min(create_time) AS minCreateTime
                       FROM t_reply
                       WHERE star IS NOT NULL
                       GROUP BY subject_id) AS T ON tr.subject_id = T.subject_id AND tr.create_time = T.minCreateTime;
        # 创建字段索引
        CREATE INDEX ix_subject_first_reply_subjectId
          ON subject_first_reply (subject_id);
        CREATE INDEX ix_subject_first_stat_subjectId
          ON subject_first_stat (subject_id);

        SELECT ts.id                                                                  AS Id,
               ts.create_time                                                         AS CreateTime,
               ts.order_time                                                          AS OrderTime,
               ts.create_user                                                         AS CreateUser,
               tu.name                                                                AS CreateUserName,
               td.name                                                                AS DepartmentName,
               tu.mobile                                                              AS Telephone,
               ts.title                                                               AS Title,
               ts.content                                                             AS Content,
               tp.name                                                                AS ProductName,
			   ts.vendor 														      AS Vendor,
               IFNULL(vn.name,'')                                              	      AS ComplainVendor,
               tc.lable                                                               AS CatName,
               (SELECT group_concat(DISTINCT name  order by trar.create_time ASC)
                FROM t_replyer_assign_record trar
                       JOIN t_user tu1 ON  trar.to_user = tu1.id
                WHERE subject_id = ts.id)                                        AS ReplyerUser,
               ts.zan                                                                 AS Zan,
               ts.view                                                                AS View,
               (SELECT COUNT(1) FROM t_reply WHERE subject_id = ts.id)                 AS CommentCount,
               sfr.create_time                                                        AS FirstCommentTime,
               sfr.create_name                                                        AS FirstCommentUser,
               sfr.content                                                            AS FirstComment,
               sfs.create_time                                                        AS FirstStatTime,
               sfs.create_name                                                        AS FirstStatUser,
               sfs.content                                                            AS FirstStatComment,
               sfs.star                                                               AS FirstStar,
               sfs.star_remark                                                        AS StarRemark,
               sfs.star_remark2                                                       AS StarRemarkAppend,
               (SELECT max(t_reply.create_time) FROM t_reply WHERE subject_id = ts.id
                                                               AND parent_id IS NULL) AS MaxCommentTime,
							 (select vendor_star from t_reply where subject_id=ts.id and vendor_star>0) as VendorStar,
					(select star_time from t_reply where star is not null and subject_id=ts.id limit 1)	as StartTime	 
        FROM t_subject ts
               JOIN t_user tu ON ts.create_user = tu.id
               JOIN t_cat tc ON ts.cat_id = tc.id
               LEFT JOIN t_department td ON ts.department_id = td.id
               LEFT JOIN t_product tp ON ts.product_id = tp.id
               LEFT JOIN subject_first_reply sfr ON ts.id = sfr.subject_id
               LEFT JOIN subject_first_stat sfs ON ts.id = sfs.subject_id
							left join (select sv1.subject_id,d.`name` from t_subject_vendor sv1

							inner join (
							select max(create_time) as create_time_max,subject_id from t_subject_vendor
							where is_delete=0
							group by subject_id) sv2 on sv1.subject_id=sv2.subject_id and sv1.create_time=sv2.create_time_max
							inner join t_department d on sv1.vendor_department_id=d.id) vn on ts.id=vn.subject_id

        #STRWHERE#
		 /*TagFilterKeyword{[
          AND (ts.title like '%{0}%' OR tu.name like '%{0}%')
          ]}*/
        ORDER BY ts.create_time DESC, MaxCommentTime DESC;
        ]]>
      </Text>
    </SQL>
    <!--数据更新-->
	    <!--修改热度 主题分类-->
    <SQL SQLKey="Subject.UpdateViewCount" ConnectionKey="MySql">
      <Text>
        <![CDATA[
        UPDATE t_subject
        SET view = @view,
			cat_id=@cat_id,
			cat_extra=@cat_extra
        WHERE id = @Id;
        ]]>
      </Text>
    </SQL>
	  <SQL SQLKey="Subject.LoadSubject" ConnectionKey="MySql">
      <Text>
        <![CDATA[
       select id,id as subjectid,cat_id,cat_extra,view from t_subject where id=@id
        ]]>
      </Text>
    </SQL>
	
	    <!--修改重要置顶-->
  <SQL SQLKey="Subject.UpdateWeight" ConnectionKey="MySql">
      <Text>
        <![CDATA[
        UPDATE t_subject
        SET weight = @weight
        WHERE id = @Id;
        ]]>
      </Text>
    </SQL>
	  <SQL SQLKey="Subject.ValidWeight" ConnectionKey="MySql">
      <Text>
        <![CDATA[
        select count(1) from t_subject
        WHERE weight = @weight and id<>@Id;
        ]]>
      </Text>
    </SQL>
    <SQL SQLKey="Subject.GetById" ConnectionKey="MySql">
      <Text>
        <![CDATA[
         SELECT ts.id                                                         AS Id,
                ts.create_time                                                AS CreateTime,
                ts.create_user                                                AS CreateUser,
                ts.title                                                      AS Title,
                tu.name                                                       AS CreateUserName,
                ts.content                                                    AS Content,
                tp.name                                                       AS ProductName,
               
               IFNULL((select group_concat(distinct d.`name`)
							 from t_subject_vendor sv
							 inner join t_department d on sv.vendor_department_id=d.id
							 where sv.subject_id=ts.id order by sv.create_time),ts.vendor)  AS Vendor,
               
                ts.images                                                     AS Images,
               (SELECT group_concat(distinct name)
               FROM t_replyer_assign_record trar
                      JOIN t_user tu1 on trar.to_user = tu1.id
               WHERE subject_id = ts.id
               order by trar.create_time asc)                                AS ReplyerUser,
               (SELECT vendor_star FROM t_reply where subject_id=ts.id and vendor_star>0 LIMIT 1) as VendorStar,
               (SELECT star FROM t_reply WHERE subject_id = ts.id and star IS NOT NULL AND parent_id IS NULL ORDER BY create_time ASC LIMIT 1) AS StarCount
               
         FROM t_subject AS ts
         LEFT JOIN t_product AS tp ON ts.product_id = tp.id
         INNER JOIN t_user AS tu ON ts.create_user = tu.id
         WHERE ts.id = @Id and ts.is_delete=0;
        ]]>
      </Text>
    </SQL>

    <SQL SQLKey="Subject.SearchReplyPageList" ConnectionKey="MySql">
      <Text>
        <![CDATA[
        SELECT SQL_CALC_FOUND_ROWS tr.id  AS Id,
                           tr.parent_id   AS ParentId,
                           tr.create_time AS CreateTime,
                           tr.create_user AS CreateUser,
                           tu.name        AS CreateUserName,
                           tr.content     AS Content
        FROM t_reply tr JOIN t_user tu ON tr.create_user = tu.id
        WHERE tr.subject_id = @Id
        ORDER BY tr.id ASC
        LIMIT @StartNum, @PageSize;

        SELECT FOUND_ROWS();
        ]]>
      </Text>
    </SQL>
    
    <SQL SQLKey="Subject.SearchPagelist" ConnectionKey="MySql">
      <Text>
        <![CDATA[
         call p_getSubjectList(@keyWords,@beginDate,date_format(@endDate,'%Y-%m-%d'),@catId,@departmentId,@vendorName,@StartNum,@PageSize);
         ]]>
      </Text>
    </SQL>
	
	
				<!--查询主题-->
	<SQL SQLKey="Subject.LoadSubjectPlan" ConnectionKey="MySql">
        <Text>
          <![CDATA[
select * from t_subject_plan where subject_id =@subject_id;
          ]]>
        </Text>
    </SQL>
		<SQL SQLKey="Subject.UpdateSubjectPlanByScoreExtra" ConnectionKey="MySql">
        <Text>
          <![CDATA[
update t_subject_plan  set score_extra =@score_extra where  subject_id =@subject_id;
          ]]>
        </Text>
    </SQL>
	
	<!--导出排行榜-->
				<SQL SQLKey="Subject.SearchExportRanking" ConnectionKey="MySql">
        <Text>
          <![CDATA[
CALL p_getRankList(@startTime,@endTime);
          ]]>
        </Text>
    </SQL>
	
		<!--导出平均未读数-->
	<SQL SQLKey="Subject.SearchExportAvg" ConnectionKey="MySql">
        <Text>
          <![CDATA[
CALL p_getUnreadStat(@startTime,@endTime);
          ]]>
        </Text>
    </SQL>

  </SQLList>
</SQLConfig>